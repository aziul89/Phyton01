# -*- coding: utf-8 -*-
"""Lista01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MGKJNd2SfKYkvHeFaWUqAOqeWx8aMiUM

**Lista 01** (Phyton) de composição de nota

**Aluna: Maria Luiza Farias**

1) Faça um algoritmo que leia os valores A, B, C e imprima na tela se a soma de A + B é menor
que C.
"""

A = int(input("Digite o valor de A: "))
B = int(input("Digite o valor de B: "))
C = int(input("Digite o valor de C: "))

if A + B < C:
    print("A soma de A e B é menor que C.")
else:
    print("A soma de A e B não é menor que C.")

"""2) Faça um algoritmo que leia o nome, o sexo e o estado civil de uma pessoa. Caso sexo seja “F” e
estado civil seja “CASADA”, solicitar o tempo de casada (anos).
"""

nome = input("Digite o nome: ")
sexo = input("Digite o sexo (M ou F): ")
estado_civil = input("Digite o estado civil: ")

if sexo in ["F", "f"] and estado_civil == "casada":
    tempo_de_casada = int(input("Digite o tempo, em anos, de casada: "))
    print(f"{nome}, você está casada há {tempo_de_casada} anos.")
else:
    print("Ok.")

"""3) Faça um algoritmo para receber um número qualquer e informar na tela se é par ou ímpar."""

num = int(input("Digite um número: "))

if num % 2 == 0:
    print(f"O número {num} é par.")
else:
    print(f"O número {num} é ímpar.")

"""4) Faça um algoritmo que leia dois valores inteiros A e B, se os valores forem iguais deverá se
somar os dois, caso contrário multiplique A por B. Ao final de qualquer um dos cálculos deve-se
atribuir o resultado para uma variável C e mostrar seu conteúdo na tela.
"""

A = int(input("Digite o valor de A: "))
B = int(input("Digite o valor de B: "))

if A == B:
    C = A + B
else:
    C = A * B

print(f"O resultado é: {C}")

"""5) Encontrar o dobro de um número caso ele seja positivo e o seu triplo caso seja negativo,
imprimindo o resultado.
"""

numero = int(input("Digite um número: "))

if numero > 0:
    res = numero * 2
else:
    res = numero * 3

print(f"O resultado é: {res}")

"""6) Escreva um algoritmo que lê dois valores booleanos (lógicos) e então determina se ambos são
VERDADEIROS ou FALSOS.
"""

string1 = input("Digite o primeiro valor booleano (True ou False): ").lower()
string2 = input("Digite o segundo valor booleano (True ou False): ").lower()

valor1 = string1 == 'true'
valor2 = string2 == 'true'

if valor1 and valor2:
    print("Ambos os valores são VERDADEIROS.")
elif not valor1 and not valor2:
    print("Ambos os valores são FALSOS.")
else:
    print("Os valores são diferentes.")

"""7) Faça um algoritmo que leia uma variável e some 5 caso seja par ou some 8 caso seja ímpar,
imprimir o resultado desta operação.
"""

num = int(input("Digite um número: "))

if num % 2 == 0:
    res = num + 5
else:
    res = num + 8

# Imprimir o resultado
print(f"O resultado é: {res}")

"""8) Escreva um algoritmo que leia três valores inteiros e diferentes e mostre-os em ordem
decrescente.
"""

a = int(input("Digite o primeiro valor: "))
b = int(input("Digite o segundo valor: "))
c = int(input("Digite o terceiro valor: "))

valores = [a, b, c]

valores.sort(reverse=True)

print(f"Os valores em ordem decrescente são: {valores}")

"""9) Tendo como dados de entrada a altura e o sexo de uma pessoa, construa um algoritmo que
calcule seu peso ideal, utilizando as seguintes fórmulas:
● para homens: (72.7 * h) – 58;
● para mulheres: (62.1 * h) – 44.7.
"""

altura = float(input("Digite a altura: "))
sexo = input("Digite o sexo (M ou F): ").upper()

if sexo == "M":
    peso_ideal = (72.7 * altura) - 58
elif sexo == "F":
    peso_ideal = (62.1 * altura) - 44.7
else:
    peso_ideal = None
    print("Sexo inválido.")

if peso_ideal is not None:
    print(f"O peso ideal para uma pessoa de altura {altura}m e sexo {sexo} é {peso_ideal} kg.")

"""10) O IMC – Indice de Massa Corporal é um critério da Organização Mundial de Saúde para dar
umaindicação sobre a condição de peso de uma pessoa adulta. A fórmula é IMC = peso / ( altura )2

Elabore um algoritmo que leia o peso e a altura de um adulto e mostre sua condição de acordo
com a tabela abaixo.

```
# IMC em adultos Condição
Abaixo de 18,5 Abaixo do peso
Entre 18,5 e 25 Peso normal
Entre 25 e 30 Acima do peso
Acima de 30 obeso
```


"""

peso = float(input("Digite o peso em kg: "))
altura = float(input("Digite a altura em metros: "))

imc = peso / (altura ** 2)

if imc < 18.5:
    condicao = "Abaixo do peso"
elif 18.5 <= imc < 25:
    condicao = "Peso normal"
elif 25 <= imc < 30:
    condicao = "Acima do peso"
else:
    condicao = "Obeso"

print(f"O IMC da pessoa é: {imc}")
print(f"Condição: {condicao}")

"""11) Elabore um algoritmo que calcule o que deve ser pago por um produto, considerando o preço
normal de etiqueta e a escolha da condição de pagamento. Utilize os códigos da tabela a seguir
para ler qual acondição de pagamento escolhida e efetuar o cálculo adequado.

```
# Código Condição de pagamento
1 À vista em dinheiro ou cheque, recebe 10% de desconto
2 À vista no cartão de crédito, recebe 15% de desconto
3 Em duas vezes, preço normal de etiqueta sem juros
4 Em duas vezes, preço normal de etiqueta mais juros de 10%
```


"""

preco = float(input("Digite o preço do produto: R$ "))

codigo = int(input("Digite o código da condição de pagamento (1, 2, 3 ou 4): "))

if codigo == 1:
    valor_final = preco - (preco * 0.10)
elif codigo == 2:
    valor_final = preco - (preco * 0.15)
elif codigo == 3:
    valor_final = preco
elif codigo == 4:
    valor_final = preco + (preco * 0.10)
else:
    valor_final = None

if valor_final is not None:
    print(f"Valor a ser pago: R$ {valor_final}")
else:
    print("Código de pagamento inválido.")

"""12) Escreva um algoritmo que leia o número de identificação, as 3 notas obtidas por um aluno nas
3 verificações e a média dos exercícios que fazem parte da avaliação, e calcule a média de
aproveitamento, usando a fórmula:
MA := (nota1 + nota 2 * 2 + nota 3 * 3 + ME)/7

```
# A atribuição dos conceitos obedece a tabela abaixo. O algoritmo deve escrever o número do aluno,
suas notas, a média dos exercícios, a média de aproveitamento, o conceito correspondente e a
mensagem 'Aprovado' se o conceito for A, B ou C, e 'Reprovado' se o conceito for D ou E.
Média de aproveitamento Conceito
>= 90 A
>= 75 e < 90 B
>= 60 e < 75 C
>= 40 e < 60 D
< 40 E
```


"""

numero_identificacao = input("Digite o número de identificação do aluno: ")
nota1 = float(input("Digite a nota 1: "))
nota2 = float(input("Digite a nota 2: "))
nota3 = float(input("Digite a nota 3: "))
media_exercicios = float(input("Digite a média dos exercícios: "))

media_aproveitamento = (nota1 + (nota2 * 2) + (nota3 * 3) + media_exercicios) / 7

if media_aproveitamento >= 90:
    conceito = 'A'
    status = 'Aprovado'
elif media_aproveitamento >= 75:
    conceito = 'B'
    status = 'Aprovado'
elif media_aproveitamento >= 60:
    conceito = 'C'
    status = 'Aprovado'
elif media_aproveitamento >= 40:
    conceito = 'D'
    status = 'Reprovado'
else:
    conceito = 'E'
    status = 'Reprovado'

print("\nNúmero de Identificação do Aluno:", numero_identificacao)
print("Nota 1:", nota1)
print("Nota 2:", nota2)
print("Nota 3:", nota3)
print("Média dos Exercícios:", media_exercicios)
print("Média de Aproveitamento: {:.2f}".format(media_aproveitamento))
print("Conceito:", conceito)
print("Status:", status)

"""2.1) Desenvolver um algoritmo que efetue a soma de todos os números ímpares que são múltiplos de
três e que se encontram no conjunto dos números de 1 até 500.
"""

soma = 0

for numero in range(1, 501):
    if numero % 2 != 0 and numero % 3 == 0:
        soma += numero

print("A soma de todos os números ímpares múltiplos de 3 entre 1 e 500 é:", soma)

"""2.2) Desenvolver um algoritmo que leia a altura de 15 pessoas. Este programa deverá calcular e
mostrar :
a. A menor altura do grupo;
b. A maior altura do grupo;
"""

menor_altura = float('inf')
maior_altura = float('-inf')

for i in range(15):
    altura = float(input(f"Digite a altura da pessoa {i + 1} em metros: "))

    if altura < menor_altura:
        menor_altura = altura

    if altura > maior_altura:
        maior_altura = altura

print(f"A menor altura do grupo é: {menor_altura:.2f} metros")
print(f"A maior altura do grupo é: {maior_altura:.2f} metros")

"""2.3) Desenvolver um algoritmo que leia um número não determinado de valores e calcule e escreva a
média aritmética dos valores lidos, a quantidade de valores positivos, a quantidade de valores
negativos e o percentual de valores negativos e positivos.
"""

soma_valores = 0
contagem_valores = 0
quantidade_positivos = 0
quantidade_negativos = 0

while True:
    valor = float(input("Digite um valor (ou 0 para encerrar): "))

    if valor == 0:
        break

    soma_valores += valor
    contagem_valores += 1

    if valor > 0:
        quantidade_positivos += 1
    elif valor < 0:
        quantidade_negativos += 1

if contagem_valores > 0:
    media_aritmetica = soma_valores / contagem_valores
else:
    media_aritmetica = 0

if contagem_valores > 0:
    percentual_positivos = (quantidade_positivos / contagem_valores) * 100
    percentual_negativos = (quantidade_negativos / contagem_valores) * 100
else:
    percentual_positivos = 0
    percentual_negativos = 0

print(f"Média aritmética dos valores lidos: {media_aritmetica:.2f}")
print(f"Quantidade de valores positivos: {quantidade_positivos}")
print(f"Quantidade de valores negativos: {quantidade_negativos}")
print(f"Percentual de valores positivos: {percentual_positivos:.2f}%")
print(f"Percentual de valores negativos: {percentual_negativos:.2f}%")

"""2.4) Escrever um algoritmo que leia uma quantidade desconhecida de números e conte quantos deles
estão nos seguintes intervalos: [0-25], [26-50], [51-75] e [76-100]. A entrada de dados deve
terminar quando for lido um número negativo.
"""

contagem_0_25 = 0
contagem_26_50 = 0
contagem_51_75 = 0
contagem_76_100 = 0

while True:
    numero = float(input("Digite um número (ou um número negativo para encerrar): "))

    if numero < 0:
        break

    if 0 <= numero <= 25:
        contagem_0_25 += 1
    elif 26 <= numero <= 50:
        contagem_26_50 += 1
    elif 51 <= numero <= 75:
        contagem_51_75 += 1
    elif 76 <= numero <= 100:
        contagem_76_100 += 1

print(f"Números no intervalo [0-25]: {contagem_0_25}")
print(f"Números no intervalo [26-50]: {contagem_26_50}")
print(f"Números no intervalo [51-75]: {contagem_51_75}")
print(f"Números no intervalo [76-100]: {contagem_76_100}")

"""2.5) Faça um algoritmo estruturado que leia uma quantidade não determinada de números positivos.
Calcule a quantidade de números pares e ímpares, a média de valores pares e a média geral dos
números lidos. O número que encerrará a leitura será zero.
"""

quantidade_pares = 0
quantidade_impares = 0
soma_pares = 0
soma_total = 0
contagem_total = 0

while True:
    numero = int(input("Digite um número positivo (ou 0 para encerrar): "))

    if numero == 0:
        break

    if numero > 0:
        soma_total += numero
        contagem_total += 1

        if numero % 2 == 0:
            quantidade_pares += 1
            soma_pares += numero
        else:
            quantidade_impares += 1
    else:
        print("Por favor, digite apenas números positivos.")

if quantidade_pares > 0:
    media_pares = soma_pares / quantidade_pares
else:
    media_pares = 0

if contagem_total > 0:
    media_geral = soma_total / contagem_total
else:
    media_geral = 0

print(f"Quantidade de números pares: {quantidade_pares}")
print(f"Quantidade de números ímpares: {quantidade_impares}")
print(f"Média dos valores pares: {media_pares:.2f}")
print(f"Média geral dos números lidos: {media_geral:.2f}")

"""2.6) Escrever um algoritmo que gera e escreve os números ímpares entre 100 e 200"""

for numero in range(100, 201):
    if numero % 2 != 0:
        print(numero)

"""2.7) Escrever um algoritmo que leia um valor para uma variável N de 1 a 10 e calcule a tabuada de
N. Mostre a tabuada na forma: 0 x N = 0, 1 x N = 1N, 2 x N = 2N, ..., 10 x N = 10N.
"""

while True:
    N = int(input("Digite um valor para N (entre 1 e 10): "))
    if 1 <= N <= 10:
        break
    else:
        print("Valor inválido. Por favor, digite um número entre 1 e 10.")

for i in range(11):
    resultado = i * N
    print(f"{i} x {N} = {resultado}")

"""2.8) Escreva um algoritmo que leia um valor inicial A e uma razão R e imprima uma seqüência em
P.A. contendo 10 valores.
"""

A = float(input("Digite o valor inicial A: "))
R = float(input("Digite a razão R: "))

for n in range(10):
    termo = A + n * R
    print(f"Termo {n + 1}: {termo}")

"""2.9) Escreva um algoritmo que leia um valor inicial A e uma razão R e imprima uma seqüência em
P.G. contendo 10 valores.
"""

A = float(input("Digite o valor inicial A: "))
R = float(input("Digite a razão R: "))

for n in range(10):
    termo = A * (R ** n)
    print(f"Termo {n + 1}: {termo}")

"""2.10) Escreva um algoritmo que leia um valor inicial A e imprima a seqüência de valores do cálculo de
A! e o seu resultado. Ex: 5! = 5 X 4 X 3 X 2 X 1 = 120
"""

def calcular_fatorial(n):
    resultado = 1
    sequencia = []
    for i in range(n, 0, -1):
        resultado *= i
        sequencia.append(i)
    return sequencia, resultado

A = int(input("Digite um valor inteiro para calcular o fatorial: "))

sequencia, resultado = calcular_fatorial(A)

sequencia_str = " X ".join(map(str, sequencia))
print(f"{A}! = {sequencia_str} = {resultado}")